// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
//
// KVBlockChain commit service:
// Provides a service to commit KV transactions to the blockchain.
//

syntax = "proto3";
package com.digitalasset.kvbc;
option java_package = "com.digitalasset.kvbc";

service CommitService {
  // Commit a transaction.
  rpc CommitTransaction (CommitRequest) returns (CommitResponse) {}
}

message CommitRequest {
  bytes submission = 1;
  repeated KVKey input_log_entries = 2;
  repeated KVKey input_state = 3;
}

message CommitResponse {
  CommitStatus status = 1;

  // The block into which the transaction was committed.
  // Unset if commit failed.
  int64 block_id = 2;

  enum CommitStatus {
    OK = 0;
    CONFLICT = 1;
  }
}

message KVKey {
  bytes key = 1;
}


// FIXME(JM): Move to its own proto file
// The KVBC command
message Command {
  oneof cmd {
    ReadCommand read = 1;
    CommitRequest commit = 2;
  }
}

message ReadCommand {
  repeated KVKey reads = 1;
}

message CommandReply {
  oneof result {
    CommitResponse commit = 1;
    string read = 2; // TODO
    string error = 3;
  }
}

