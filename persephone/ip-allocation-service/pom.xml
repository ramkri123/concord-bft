<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.vmware.blockchain</groupId>
        <artifactId>persephone</artifactId>
        <version>${revision}</version>
    </parent>

    <artifactId>persephone-ip-allocation-service</artifactId>
    <packaging>jar</packaging>
    <name>Blockchain - Fleet Management IP Allocation Service</name>
    <version>1.0.0-SNAPSHOT</version>

    <properties>
        <maven.plugin.protobuf>0.6.1</maven.plugin.protobuf>
        <protobuf.runtime.java.version>3.7.1</protobuf.runtime.java.version>
        <persephone.protobuf.source.path>../api/src/protobuf</persephone.protobuf.source.path>
        <kotlin.version>1.3.61</kotlin.version>
        <java.version>11</java.version>
        <spring.boot.mainclass>com.vmware.blockchain.ipam.server.Application</spring.boot.mainclass>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-serialization-runtime</artifactId>
            <version>0.14.0</version>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>com.vmware.blockchain</groupId>-->
<!--            <artifactId>persephone-core</artifactId>-->
<!--            <version>1.0.0-SNAPSHOT</version>-->
<!--        </dependency>-->
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-jdk8</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-reactive</artifactId>
        </dependency>

        <dependency>
            <groupId>com.vmware.blockchain</groupId>
            <artifactId>vmbc-base</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
               ~ External dependencies.~
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
            <version>2.10.2</version>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>3.11.4</version>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java-util</artifactId>
            <version>3.11.4</version>
        </dependency>
        <dependency>
            <groupId>com.googlecode.json-simple</groupId>
            <artifactId>json-simple</artifactId>
        </dependency>
        <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        ~ Special dependencies. (Custom order)                      ~
        ~ Note: Despite Maven's declarative build manifest that     ~
        ~ should be agnostic to declaration ordering. Due to        ~
        ~ exclusions declared in Spring's main dependency, ordering ~
        ~ matters for classpath determination.                      ~
        ~ Ordering here adheres to lexicographical ordering as much ~
        ~ as can be done to avoid runtime classpath issues.         ~
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
        <dependency>
            <!-- Main Spring Boot dependency. -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
                <!-- Exclude the Tomcat dependency. -->
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <dependency>
            <!-- Spring Boot logging with log4j2. -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
        </dependency>
        <dependency>
            <groupId>io.github.lognet</groupId>
            <artifactId>grpc-spring-boot-starter</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>io.grpc</groupId>
                    <artifactId>grpc-netty</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-protobuf</artifactId>
            <version>${grpc.runtime.java.version}</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-stub</artifactId>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-netty-shaded</artifactId>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
    </dependencies>

    <build>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.6.2</version>
            </extension>
        </extensions>

        <plugins>
            <plugin>
                <!-- Kotlin compile plugin must be specified before Java.
                     (Supports polyglot projects. -->
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <configuration>
                    <jvmTarget>${kotlin.compiler.jvmTarget}</jvmTarget>
                    <args>
                        <!-- Multi-platform project to allow "expect"/"actual" declarations. -->
                        <arg>-Xmulti-platform</arg>
                        <!-- Remove wrapper object abstraction cost. -->
                        <!--<arg>-XXLanguage:+InlineClasses</arg>-->
                        <arg>-Xuse-experimental=kotlin.ExperimentalUnsignedTypes</arg>
                        <arg>-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi</arg>
                    </args>
                    <compilerPlugins>
                        <plugin>kotlinx-serialization</plugin>
                    </compilerPlugins>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-serialization</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>kapt</id>
                        <goals>
                            <goal>kapt</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/main/java</sourceDir>
                                <sourceDir>${project.basedir}/target/generated-sources/protobuf</sourceDir>
                                <sourceDir>${project.basedir}/target/generated-sources/protobuf/common</sourceDir>
                                <sourceDir>${project.basedir}/target/generated-sources/protobuf/jvm</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-kapt</id>
                        <goals>
                            <goal>test-kapt</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/main/test/java</sourceDir>
                                <sourceDir>${project.basedir}/target/generated-sources/test-protobuf/common</sourceDir>
                                <sourceDir>${project.basedir}/target/generated-sources/test-protobuf/jvm</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>kotlin-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/main/java</sourceDir>
                                <sourceDir>${project.basedir}/target/generated-sources/kapt/compile</sourceDir>
                                <sourceDir>${project.basedir}/target/generated-sources/protobuf</sourceDir>
                                <sourceDir>${project.basedir}/target/generated-sources/kaptKotlin/compile</sourceDir>
                                <sourceDir>${project.basedir}/target/generated-sources/protobuf/common</sourceDir>
                                <sourceDir>${project.basedir}/target/generated-sources/protobuf/jvm</sourceDir>
                            </sourceDirs>
                            <output>${project.build.directory}/classes</output>
                        </configuration>
                    </execution>
                    <execution>
                        <id>kotlin-test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/main/test/java</sourceDir>
                                <sourceDir>${project.basedir}/target/generated-sources/kapt/test</sourceDir>
                                <sourceDir>${project.basedir}/target/generated-sources/kaptKotlin/test</sourceDir>
                                <sourceDir>${project.basedir}/target/generated-sources/test-protobuf/common</sourceDir>
                                <sourceDir>${project.basedir}/target/generated-sources/test-protobuf/jvm</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <release>${java.version}</release>
                    <fork>true</fork>
                    <meminitial>1024m</meminitial>
                    <maxmem>4048m</maxmem>
                    <generatedSourcesDirectory>${project.build.directory}/generated-sources/annotations</generatedSourcesDirectory>
                    <generatedTestSourcesDirectory>${project.build.directory}/generated-sources/test-annotations</generatedTestSourcesDirectory>
                    <includes>
                        <include>**/*.java</include>
                    </includes>
                    <compilerArgs>
                        <arg>-Xlint:all</arg>
                    </compilerArgs>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-configuration-processor</artifactId>
                            <version>2.2.2.RELEASE</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
                <executions>
                    <!-- Disable default-compile (treated specially by Maven). -->
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution>
                    <!-- Disable default-testCompile (treated specially by Maven). -->
                    <execution>
                        <id>default-testCompile</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>java-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>java-test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <mainClass>${spring.boot.mainclass}</mainClass>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--Protobuf to Java compiler plugin-->
            <plugin>
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>${maven.plugin.protobuf}</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>protobuf-java</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <protoSourceRoot>${persephone.protobuf.source.path}</protoSourceRoot>
                            <outputDirectory>${project.build.directory}/generated-sources/protobuf/</outputDirectory>
                            <protocArtifact>com.google.protobuf:protoc:${protobuf.runtime.java.version}:exe:${os.detected.classifier}</protocArtifact>
                            <clearOutputDirectory>false</clearOutputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>grpc-java</id>
                        <goals>
                            <goal>compile-custom</goal>
                        </goals>
                        <configuration>
                            <pluginId>grpc-java</pluginId>
                            <protoSourceRoot>${persephone.protobuf.source.path}</protoSourceRoot>
                            <outputDirectory>${project.build.directory}/generated-sources/protobuf/</outputDirectory>
                            <protocArtifact>com.google.protobuf:protoc:${protobuf.runtime.java.version}:exe:${os.detected.classifier}</protocArtifact>
                            <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.runtime.java.version}:exe:${os.detected.classifier}</pluginArtifact>
                            <clearOutputDirectory>false</clearOutputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
