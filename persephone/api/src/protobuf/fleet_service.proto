/* [START declaration] */
syntax = "proto3";
package com.vmware.blockchain.deployment.model;

import "concord_cluster.proto";
import "core.proto";
/* [END declaration] */

/* [START java_declaration] */
option java_package = "com.vmware.blockchain.deployment.model";
option java_multiple_files = true;
/* [END java_declaration] */

/* [START messages] */
/**
 * Request definition for operation to register a deployed Concord node.
 *
 * @property[header]
 *   message header.
 * @property[registration_token]
 *   registration token mapped uniquely to a deployment session.
 * @property[info]
 *   node information to be register.
 */
message RegisterInstanceRequest {
    MessageHeader header = 1;
    string registration_token = 2;
    ConcordNodeInfo info = 3;
}

/**
 * Response definition for operation to register a deployed Concord node.
 *
 * @property[header]
 *   message header.
 * @property[type]
 *   type of event.
 * @property[host_info]
 *   information pertaining to Concord node instance's host environment.
 * @property[configuration]
 *   information pertaining to Concord node instance's configuration.
 */
message RegisterInstanceResponseEvent {
    /**
     * Type of [RegisterInstanceResponseEvent] emitted.
     */
    enum Type {
        NOOP = 0; // Default value, should not be used.
        ACKNOWLEDGED = 1; // Request acknowledged (registration recorded).
        HOST_INFO = 2; // Information about the node's host environment is updated.
        NODE_CONFIGURATION = 3; // Configuration for node is updated.
    }

    MessageHeader header = 1;
    Type type = 2;
    ConcordNodeHostInfo host_info = 3;
    ConcordNodeConfiguration configuration = 4;
}
/* [END messages] */

/* [START services] */
/**
 * Service definition pertaining to operations on Concord nodes fleet management.
 */
service FleetService {
    /**
     * Operation to register a deployed Concord node based on a [RegisterInstanceRequest].
     */
    rpc RegisterInstance (RegisterInstanceRequest) returns (stream RegisterInstanceResponseEvent) {};
}
/* [END services] */
