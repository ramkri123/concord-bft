/* [START declaration] */
syntax = "proto3";
package vmware.blockchain.deployment.v1;

import "vmware/blockchain/deployment/v1/concord_model.proto";
import "vmware/blockchain/deployment/v1/core.proto";
/* [END declaration] */

/* [START java_declaration] */
option java_package = "com.vmware.blockchain.deployment.model";
option java_multiple_files = true;
/* [END java_declaration] */

/* [START messages] */
/**
 * Request definition for operation to add a [ConcordModelSpecification]
 *
 * @property[header]
 *   message header.
 * @property[specification]
 *   model definition to be added.
 */
message AddModelRequest {
    MessageHeader header = 1;
    ConcordModelSpecification specification = 2;
}

/**
 * Response definition for operation to add a [ConcordModelSpecification]
 *
 * @property[header]
 *   message header.
 * @property[id]
 *   identifier assigned to the added model.
 */
message AddModelResponse {
    MessageHeader header = 1;
    ConcordModelIdentifier id = 2;
}

/**
 * Request definition for operation to list [ConcordModelSpecification]s.
 *
 * @property[header]
 *   message header.
 * @property[order_by]
 *   order the result stream by a specified order type.
 * @property[result_limit]
 *   maximum size of the result set to be prepared. (0 / unspecified ==> unlimited)
 */
message ListModelsRequest {
    enum OrderBy {
        UNSPECIFIED = 0;
        VERSION = 1;
    }

    MessageHeader header = 1;
    OrderBy order_by = 2;
    uint32 result_limit = 3;
}

/**
 * Response stream event definition for operation to list [ConcordModelSpecification]s
 *
 * @property[header]
 *   message header.
 * @property[id]
 *   identifier of the Concord model.
 * @property[specification]
 *   model specification.
 */
message ListModelsResponseEvent {
    MessageHeader header = 1;
    ConcordModelIdentifier id = 2;
    ConcordModelSpecification specification = 3;
}

/**
 * Model definition for metadata server configuration settings.
 *
 * @property[port]
 *   port number to use for server instance.
 * @property[transport_security]
 *   transport security setting.
 */
message MetadataServerConfiguration {
    int32 port = 1;
    TransportSecurity transport_security = 2;
}
/* [END messages] */

/* [START services] */
/**
 * Service definition pertaining to operations on [ConcordModelSpecification]s.
 */
service ConcordModelService {
    /**
     * Operation to add a [ConcordModelSpecification].
     */
    rpc AddModel (AddModelRequest) returns (AddModelResponse) {};
    /**
     * Operation to list all [ConcordModelSpecification]s.
     */
    rpc ListModels (ListModelsRequest) returns (stream ListModelsResponseEvent) {};
}
/* [END services] */
