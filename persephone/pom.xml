<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.vmware.blockchain</groupId>
    <artifactId>persephone</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Blockchain - Deployment</name>

    <modules>
        <module>api</module>
        <module>core</module>
        <module>persistence</module>
    </modules>

    <repositories>
        <repository>
            <id>bintray-kotlin-kotlinx</id>
            <name>bintray</name>
            <url>https://kotlin.bintray.com/kotlinx</url>
        </repository>
    </repositories>

    <properties>
        <!-- Project properties. -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>11</java.version>
        <kotlin.version>1.3.21</kotlin.version>
        <kotlin.coroutines.version>1.1.1</kotlin.coroutines.version>
        <kotlin.serialization.version>0.10.0</kotlin.serialization.version>
        <ktor.version>1.1.2</ktor.version>

        <!-- Maven-related properties. -->
        <kotlin.compiler.incremental>true</kotlin.compiler.incremental>
        <kotlin.compiler.jvmTarget>1.8</kotlin.compiler.jvmTarget>
        <maven.plugin.assembly>3.1.0</maven.plugin.assembly>
        <maven.plugin.compiler>3.7.0</maven.plugin.compiler>
        <maven.plugin.jar>3.1.1</maven.plugin.jar>
        <maven.plugin.javadoc>3.0.0</maven.plugin.javadoc>
        <maven.plugin.os>1.3.0.Final</maven.plugin.os>
        <maven.plugin.protobuf>0.6.1</maven.plugin.protobuf>
        <maven.plugin.resources>3.0.2</maven.plugin.resources>
        <maven.plugin.source>3.0.1</maven.plugin.source>
        <maven.plugin.surefire>2.22.1</maven.plugin.surefire>

        <!-- Dependency-related properties. -->
        <assertj.version>3.11.1</assertj.version>
        <atomicfu.version>0.12.2</atomicfu.version>
        <grpc.runtime.java.version>1.18.0</grpc.runtime.java.version>
        <grpc.runtime.kotlinx.serialization.version>1.0.0-SNAPSHOT</grpc.runtime.kotlinx.serialization.version>
        <jackson.version>2.9.7</jackson.version>
        <jqwik.version>1.1.0</jqwik.version>
        <junit.jupiter.version>5.4.0</junit.jupiter.version>
        <kotlinpoet.version>1.0.1</kotlinpoet.version>
        <protobuf.runtime.java.version>3.6.1</protobuf.runtime.java.version>
        <reactive.stream.version>1.0.2</reactive.stream.version>
        <slf4j.version>1.7.25</slf4j.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            ~ Platform dependencies.                                    ~
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
            <dependency>
                <!-- There is transitive dependency from this base set to
                     a set of Kotlin standard library and annotations. -->
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib-jdk8</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-reflect</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            ~ Internal dependencies.                                    ~
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
            <dependency>
                <groupId>com.vmware.blockchain</groupId>
                <artifactId>persephone-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmware.blockchain</groupId>
                <artifactId>persephone-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmware.blockchain</groupId>
                <artifactId>persephone-persistence</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            ~ External dependencies.                                    ~
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>${jackson.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>com.vmware.blockchain.protobuf</groupId>
                <artifactId>grpc-runtime-kotlinx-serialization</artifactId>
                <version>${grpc.runtime.kotlinx.serialization.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-core</artifactId>
                <version>${grpc.runtime.java.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-stub</artifactId>
                <version>${grpc.runtime.java.version}</version>
            </dependency>
            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-client</artifactId>
                <version>${ktor.version}</version>
            </dependency>
            <dependency>
                <groupId>net.jqwik</groupId>
                <artifactId>jqwik</artifactId>
                <version>${jqwik.version}</version>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlinx</groupId>
                <artifactId>atomicfu</artifactId>
                <version>${atomicfu.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlinx</groupId>
                <artifactId>kotlinx-coroutines-core</artifactId>
                <version>${kotlin.coroutines.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlinx</groupId>
                <artifactId>kotlinx-coroutines-jdk8</artifactId>
                <version>${kotlin.coroutines.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlinx</groupId>
                <artifactId>kotlinx-coroutines-reactive</artifactId>
                <version>${kotlin.coroutines.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlinx</groupId>
                <artifactId>kotlinx-serialization-runtime</artifactId>
                <version>${kotlin.serialization.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit.jupiter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.jupiter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.reactivestreams</groupId>
                <artifactId>reactive-streams</artifactId>
                <version>${reactive.stream.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        ~ Per-project tree layout.                                  ~
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
        <sourceDirectory>${project.basedir}/src/jvm</sourceDirectory>
        <testSourceDirectory>${project.basedir}/test/jvm</testSourceDirectory>
        <resources>
            <resource>
                <directory>${project.basedir}/src/resources</directory>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>${project.basedir}/test/resources</directory>
            </testResource>
        </testResources>
        <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        ~ Plug-in configurations.                                   ~
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
        <pluginManagement>
            <plugins>
                <plugin>
                    <!-- Kotlin compile plugin must be specified before Java.
                         (Supports polyglot projects. -->
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-maven-plugin</artifactId>
                    <version>${kotlin.version}</version>
                    <configuration>
                        <jvmTarget>1.8</jvmTarget>
                        <args>
                            <!-- Multi-platform project to allow "expect"/"actual" declarations. -->
                            <arg>-Xmulti-platform</arg>
                            <!-- Remove wrapper object abstraction cost. -->
                            <!--<arg>-XXLanguage:+InlineClasses</arg>-->
                            <arg>-Xuse-experimental=kotlin.ExperimentalUnsignedTypes</arg>
                            <arg>-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi</arg>
                        </args>
                        <compilerPlugins>
                            <plugin>kotlinx-serialization</plugin>
                        </compilerPlugins>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.jetbrains.kotlin</groupId>
                            <artifactId>kotlin-maven-serialization</artifactId>
                            <version>${kotlin.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <id>kotlin-compile</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                            <configuration>
                                <sourceDirs>
                                    <sourceDir>${project.basedir}/src/common</sourceDir>
                                    <sourceDir>${project.basedir}/src/jvm</sourceDir>
                                    <sourceDir>${project.basedir}/target/generated-sources/protobuf/common</sourceDir>
                                    <sourceDir>${project.basedir}/target/generated-sources/protobuf/jvm</sourceDir>
                                </sourceDirs>
                                <output>${project.build.directory}/classes-atomicfu</output>
                            </configuration>
                        </execution>
                        <execution>
                            <id>kotlin-test-compile</id>
                            <phase>test-compile</phase>
                            <goals>
                                <goal>test-compile</goal>
                            </goals>
                            <configuration>
                                <sourceDirs>
                                    <sourceDir>${project.basedir}/test/common</sourceDir>
                                    <sourceDir>${project.basedir}/test/jvm</sourceDir>
                                    <sourceDir>${project.basedir}/target/generated-sources/test-protobuf/common</sourceDir>
                                    <sourceDir>${project.basedir}/target/generated-sources/test-protobuf/jvm</sourceDir>
                                </sourceDirs>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.jetbrains.kotlinx</groupId>
                    <artifactId>atomicfu-maven-plugin</artifactId>
                    <version>${atomicfu.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>transform</goal>
                            </goals>
                            <configuration>
                                <input>${project.build.directory}/classes-atomicfu</input>
                                <variant>FU</variant>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.plugin.compiler}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <includes>
                            <include>**/*.java</include>
                        </includes>
                        <compilerArgs>
                            <arg>-Xlint:all</arg>
                        </compilerArgs>
                        <generatedSourcesDirectory>${project.build.directory}/generated-sources/annotations</generatedSourcesDirectory>
                        <generatedTestSourcesDirectory>${project.build.directory}/generated-sources/test-annotations</generatedTestSourcesDirectory>
                    </configuration>
                    <executions>
                        <!-- Disable default-compile (treated specially by Maven). -->
                        <execution>
                            <id>default-compile</id>
                            <phase>none</phase>
                        </execution>
                        <!-- Disable default-testCompile (treated specially by Maven). -->
                        <execution>
                            <id>default-testCompile</id>
                            <phase>none</phase>
                        </execution>
                        <execution>
                            <id>java-compile</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>java-test-compile</id>
                            <phase>test-compile</phase>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven.plugin.assembly}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven.plugin.jar}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven.plugin.source}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.plugin.surefire}</version>
                    <configuration>
                        <includes>
                            <include>**/*Test.java</include>
                        </includes>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
