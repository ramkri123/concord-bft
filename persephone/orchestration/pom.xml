<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.vmware.blockchain</groupId>
        <artifactId>persephone</artifactId>
        <version>${revision}</version>
    </parent>

    <artifactId>persephone-orchestration</artifactId>
    <packaging>jar</packaging>
    <name>Blockchain - Fleet Management Orchestration Library</name>

    <properties>
        <!-- Project properties. -->
        <kotlin.version>1.3.61</kotlin.version>
        <kotlin.coroutines.version>1.3.0</kotlin.coroutines.version>
        <kotlin.serialization.version>0.14.0</kotlin.serialization.version>
        <kotlin.compiler.jvmTarget>1.8</kotlin.compiler.jvmTarget>
    </properties>

    <dependencies>
        <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        ~ Platform dependencies.                                    ~
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
        </dependency>
        <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        ~ Internal dependencies.                                    ~
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
        <dependency>
            <groupId>com.vmware.blockchain</groupId>
            <artifactId>persephone-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.vmware.blockchain</groupId>
            <artifactId>persephone-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        ~ External dependencies.                                    ~
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-jdk8</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-reactive</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-serialization-runtime</artifactId>
            <version>${kotlin.serialization.version}</version>
        </dependency>
        <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        ~ External test dependencies.                               ~
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
    </dependencies>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <!-- Kotlin compile plugin must be specified before Java.
                         (Supports polyglot projects. -->
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-maven-plugin</artifactId>
                    <version>${kotlin.version}</version>
                    <configuration>
                        <jvmTarget>${kotlin.compiler.jvmTarget}</jvmTarget>
                        <args>
                            <!-- Multi-platform project to allow "expect"/"actual" declarations. -->
                            <arg>-Xmulti-platform</arg>
                            <!-- Remove wrapper object abstraction cost. -->
                            <!--<arg>-XXLanguage:+InlineClasses</arg>-->
                            <arg>-Xuse-experimental=kotlin.ExperimentalUnsignedTypes</arg>
                            <arg>-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi</arg>
                        </args>
                        <compilerPlugins>
                            <plugin>kotlinx-serialization</plugin>
                        </compilerPlugins>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.jetbrains.kotlin</groupId>
                            <artifactId>kotlin-maven-serialization</artifactId>
                            <version>${kotlin.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <id>kapt</id>
                            <goals>
                                <goal>kapt</goal>
                            </goals>
                            <configuration>
                                <sourceDirs>
                                    <sourceDir>${project.basedir}/src/common</sourceDir>
                                    <sourceDir>${project.basedir}/src/jvm</sourceDir>
                                    <sourceDir>${project.basedir}/target/generated-sources/protobuf/common</sourceDir>
                                    <sourceDir>${project.basedir}/target/generated-sources/protobuf/jvm</sourceDir>
                                </sourceDirs>
                            </configuration>
                        </execution>
                        <execution>
                            <id>test-kapt</id>
                            <goals>
                                <goal>test-kapt</goal>
                            </goals>
                            <configuration>
                                <sourceDirs>
                                    <sourceDir>${project.basedir}/test/common</sourceDir>
                                    <sourceDir>${project.basedir}/test/jvm</sourceDir>
                                    <sourceDir>${project.basedir}/target/generated-sources/test-protobuf/common</sourceDir>
                                    <sourceDir>${project.basedir}/target/generated-sources/test-protobuf/jvm</sourceDir>
                                </sourceDirs>
                            </configuration>
                        </execution>
                        <execution>
                            <id>kotlin-compile</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                            <configuration>
                                <sourceDirs>
                                    <sourceDir>${project.basedir}/src/common</sourceDir>
                                    <sourceDir>${project.basedir}/src/jvm</sourceDir>
                                    <sourceDir>${project.basedir}/target/generated-sources/kapt/compile</sourceDir>
                                    <sourceDir>${project.basedir}/target/generated-sources/kaptKotlin/compile</sourceDir>
                                    <sourceDir>${project.basedir}/target/generated-sources/protobuf/common</sourceDir>
                                    <sourceDir>${project.basedir}/target/generated-sources/protobuf/jvm</sourceDir>
                                </sourceDirs>
                                <output>${project.build.directory}/classes-atomicfu</output>
                            </configuration>
                        </execution>
                        <execution>
                            <id>kotlin-test-compile</id>
                            <phase>test-compile</phase>
                            <goals>
                                <goal>test-compile</goal>
                            </goals>
                            <configuration>
                                <sourceDirs>
                                    <sourceDir>${project.basedir}/test/common</sourceDir>
                                    <sourceDir>${project.basedir}/test/jvm</sourceDir>
                                    <sourceDir>${project.basedir}/target/generated-sources/kapt/test</sourceDir>
                                    <sourceDir>${project.basedir}/target/generated-sources/kaptKotlin/test</sourceDir>
                                    <sourceDir>${project.basedir}/target/generated-sources/test-protobuf/common</sourceDir>
                                    <sourceDir>${project.basedir}/target/generated-sources/test-protobuf/jvm</sourceDir>
                                </sourceDirs>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.jetbrains.kotlinx</groupId>
                    <artifactId>atomicfu-maven-plugin</artifactId>
                    <version>${atomicfu.version}</version>
                    <executions>
                        <execution>
                            <phase>compile</phase>
                            <goals>
                                <goal>transform</goal>
                            </goals>
                            <configuration>
                                <input>${project.build.directory}/classes-atomicfu</input>
                                <variant>FU</variant>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.plugin.compiler.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <release>${java.version}</release>
                        <fork>true</fork>
                        <meminitial>1024m</meminitial>
                        <maxmem>4048m</maxmem>
                        <generatedSourcesDirectory>${project.build.directory}/generated-sources/annotations</generatedSourcesDirectory>
                        <generatedTestSourcesDirectory>${project.build.directory}/generated-sources/test-annotations</generatedTestSourcesDirectory>
                        <includes>
                            <include>**/*.java</include>
                        </includes>
                        <compilerArgs>
                            <arg>-Xlint:all</arg>
                        </compilerArgs>
                    </configuration>
                    <executions>
                        <!-- Disable default-compile (treated specially by Maven). -->
                        <execution>
                            <id>default-compile</id>
                            <phase>none</phase>
                        </execution>
                        <!-- Disable default-testCompile (treated specially by Maven). -->
                        <execution>
                            <id>default-testCompile</id>
                            <phase>none</phase>
                        </execution>
                        <execution>
                            <id>java-compile</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>java-test-compile</id>
                            <phase>test-compile</phase>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven.plugin.assembly.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven.plugin.jar}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven.plugin.source}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.plugin.surefire.version}</version>
                    <configuration>
                        <includes>
                            <include>**/*Test.java</include>
                        </includes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${maven.plugin.checkstyle.version}</version>
                    <executions>
                        <execution>
                            <id>validate</id>
                            <phase>validate</phase>
                            <configuration>
                                <configLocation>../resources/checkstyle.xml</configLocation>
                                <encoding>UTF-8</encoding>
                                <consoleOutput>true</consoleOutput>
                                <failsOnError>true</failsOnError>
                                <linkXRef>false</linkXRef>
                                <sourceDirectories>${project.build.sourceDirectory}</sourceDirectories>
                                <includeTestSourceDirectory>true</includeTestSourceDirectory>
                                <includeTestResources>true</includeTestResources>
                                <excludes>**/generated-sources/**</excludes>
                            </configuration>
                            <goals>
                                <goal>checkstyle</goal>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.github.gantsign.maven</groupId>
                    <artifactId>ktlint-maven-plugin</artifactId>
                    <version>${maven.plugin.ktlint.version}</version>
                    <executions>
                        <execution>
                            <id>check</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <version>${maven.plugin.flatten.version}</version>
                    <configuration>
                        <flattenMode>defaults</flattenMode>
                        <updatePomFile>true</updatePomFile>
                    </configuration>
                    <executions>
                        <execution>
                            <id>flatten</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>flatten</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>flatten.clean</id>
                            <phase>clean</phase>
                            <goals>
                                <goal>clean</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            ~ Ordered according to desired plugin execution order.      ~
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.kotlinx</groupId>
                <artifactId>atomicfu-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.github.gantsign.maven</groupId>
                <artifactId>ktlint-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
