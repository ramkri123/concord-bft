{
  "title": "VMware Blockchain",
  "subTitle": "Blockchain as a Service",
  "common": {
    "all": "All",
    "close": "Close",
    "cancel": "Cancel",
    "create": "Create",
    "deploy": "Deploy",
    "back": "Back",
    "next": "Next",
    "finish": "Finish",
    "edit": "Edit",
    "update": "Update",
    "requiredValidationMessage": "This field is required",
    "copyToClip": "Copy to clipboard",
    "help": "Need Help? Email"
  },
  "nav": {
    "menu": {
      "title": "Menu",
      "options": {
        "contract": {
          "title": "Deploy Smart Contract"
        },
        "generalTitle": "General",
        "sysAdminTitle": "System Admin",
        "deploy": {
          "title": "Deploy"
        },
        "addOrg": {
          "title": "Add Organization"
        },
        "addConsortium": {
          "title": "Add Consortium"
        },
        "addUsers": {
          "title": "Add Users"
        }
      }
    },
    "personaSelector": {
      "title": "Role"
    },
    "actions": {
      "title": "Actions",
      "resetTasks": "Reset Tasks"
    },
    "exploreAPIs": "Explore API's",
    "dashboard": {
      "title": "Dashboard"
    },
    "nodeList": {
      "title": "Node List"
    },
    "blockList": {
      "title": "Blocks"
    },
    "transactionList": {
      "title": "Transactions"
    },
    "testing": {
      "title": "Testing"
    },
    "smartContracts": {
      "title": "Smart Contracts"
    },
    "logsAndAnalysis": {
      "title": "Logs And Analysis"
    },
    "sysadmin": {
      "title": "SYSTEM ADMIN"
    },
    "organization": {
      "title": "Organizations"
    },
    "blockchains": {
      "title": "Blockchains"
    },
    "consortium": {
      "title": "Consortiums"
    },
    "kubernetes": {
      "title": "Kubernetes"
    },
    "users": {
      "title": "Users"
    },
    "login": "Login",
    "logOut": "Log Out",
    "settings": "Settings"
  },
  "time": {
    "lastXDays": "Last {{number}} Days",
    "today": "Today"
  },
  "authentication": {
    "welcome": "Welcome to",
    "username": "Username",
    "password": "Password",
    "newPassword": "New Password",
    "confirmPassword": "Confirm Password",
    "next": "Next",
    "errorMessage": "Invalid user name or password",
    "changePassword": "Change Password",
    "passwordReq": "Password must be 6 to 35 characters and contain at least one numeric digit, one uppercase letter, one lowercase letter and one special character."
  },
  "grid": {
    "search": {
      "placeholder": "Search"
    },
    "pagination": {
      "of": "of"
    }
  },
  "marketing": {
    "subTitle": "Deploy The Industry's Most Advanced Permissioned Blockchains",
    "description": "The VMware Blockchain delivers the fastest TPS in the industry. Deploy and Manage Concord and Hyperledger for your consortium and organizations today.",
    "callToAction": "Get Started",
    "midHeading": "Get the most advanced enterprise blockchain",
    "itemOne": {
      "title": "Leading Consensus Protocol",
      "description": "With the highest transactions per second and fastest time to finality."
    },
    "itemTwo": {
      "title": "Enhanced Security",
      "description": "Deploy across multiple cloud providers, permissioned blockchain nodes and networks using advanced cryptographic techniques."
    },
    "itemThree": {
      "title": "Cost Effective and Greener Solutions",
      "description": "Say goodbye to the high capital investment of proof of work.  Say goodbye to the high C02 with proof of stake."
    }
  },
  "signUp": {
    "description": "VMware Blockchain delivers the industries most advanced blockchain with the SBFT protocol.",
    "callToAction": "Complete your information to get started.",
    "duplicateEmailError": "This email has already been used, please login.",
    "form": {
      "firstName": "First Name",
      "lastName": "Last Name",
      "email": "Email",
      "password": "Password",
      "emailValMsg": "Please enter a valid email address",
      "company": "Company",
      "jobTitle": "Job Title (Optional)",
      "country": "Country",
      "relationship": "Relationship with VMware",
      "relationshipOptions": {
        "customer": "Customer",
        "employee": "Employee",
        "ecosystem": "Ecosystems Partner",
        "solutions": "Solution Provider",
        "service": "Service Provider",
        "reseller": "Reseller Partner",
        "other": "Other"
      },
      "numberOfEmployees": "Number of Employees",
      "submit": "Sign Up"
    }
  },
  "agreement": {
    "title": "Legal Agreement",
    "accept": "Accept",
    "firstName": "First Name",
    "lastName": "Last Name",
    "company": "Company"
  },
  "expectations": {
    "title": "Service Availability Expectations",
    "one": "i. The primary purpose of the PoC-grade VMware Blockchain service is to allow development and porting of Ethereum compatible DApps on the VMware blockchain stack, allowing developers to get familiar with our stack and allowing VMware to find and fix any compatibility issues. VMware will make every attempt to resolve any issues found as quickly as possible and provide a new build on the service, so DApp development is not blocked.",
    "two": "ii. In-place upgrades are currently not supported on the service. A new build will be delivered by creating an entirely new blockchain stack with a new URL for the UI and API endpoint. This means that any data saved on the old stack will be lost and developers are strongly encouraged to have their own data setup automation, so they can start using the new build quickly.",
    "three": "iii. The service does not currently support graceful recovery from crashes. This means that there is the possibility of data corruption and loss on a crash of any sort. In the event of an unrecoverable crash, the VMware team will provide developers with a new blockchain instance which will also require data set up by the developer.",
    "four": "iv. Sensitive data requiring a high level of security must not be kept in the PoC-grade service. Developers should use dummy data sets to develop and test their applications."
  },
  "dashboard": {
    "totalActiveNodes": "Total Active Nodes",
    "inactiveNodes": "Inactive Nodes",
    "nodeHealth": "Node Health",
    "deployedContracts": "Deployed Contracts",
    "transactionsPerSecond": "Transactions/second",
    "averageValidationTime": "Avg Validation Time",
    "xSeconds": "{{seconds}} <small>seconds</small>"
  },
  "filters": {
    "filterTransactions": "Filter Transactions",
    "byStatus": "By Status",
    "pendingTransactions": "Pending Transactions",
    "byTransactionType": "By Transaction Type",
    "allTransactions": "All Transactions",
    "byDateRange": "By Date Range",
    "byOwner": "By Owner",
    "allOwners": "All Owners",
    "cancel": "Cancel",
    "apply": "Apply"
  },
  "nodes": {
    "title": "Node",
    "nodes": "Nodes",
    "nodeActivity": "Node Activity",
    "overallNodeHealth": "Overall Node Health",
    "transactionsPerSecond": "Transactions/second",
    "averageValidationTime": "Avg Validation Time",
    "xSeconds": "{{seconds}} <small>seconds</small>",
    "status": "Status",
    "live": "Live",
    "offline": "Offline",
    "totalActiveNodes": "Total Active Nodes",
    "inactiveNodes": "Inactive Nodes",
    "searchPlaceholder": "Search...",
    "filters": "Filters",
    "hostname": "Hostname",
    "health": "Health",
    "healthy": "healthy",
    "unhealthy": "unhealthy",
    "address": "Address",
    "viewDetail": "View Detail",
    "network": "Network",
    "transactions": "Transactions",
    "timestamp": "Timestamp",
    "origination": "Origination",
    "transaction": "Transaction",
    "type": "Type",
    "amount": "Amount",
    "trans": "Trans",
    "length": "Length",
    "paginationSummary": "{{start}} - {{finish}} of {{total}} nodes"
  },
  "blocks": {
    "title": "Block",
    "blocks": "Blocks",
    "blockActivity": "Block Activity",
    "number": "Block Number",
    "index": "Index",
    "hash": "Hash",
    "next": "Next",
    "viewDetail": "View Detail",
    "paginationSummary": "{{start}} - {{finish}} of {{total}} blocks"
  },
  "transactions": {
    "title": "Transaction",
    "transactions": "Transactions",
    "recentTransactions": "Recent Transactions",
    "timestamp": "Timestamp",
    "origination": "Origination",
    "transactionType": "Transaction Type",
    "amount": "Amount",
    "transactionLength": "Trans Length",
    "status": "Status",
    "success": "Success",
    "failure": "Failure",
    "none": "null",
    "nodes": "Nodes",
    "hash": "Hash",
    "from": "From",
    "to": "To",
    "contractAddress": "Contract Address",
    "input": "Input",
    "value": "Value",
    "nonce": "Nonce",
    "parentHash": "Parent Hash",
    "size": "Size",
    "paginationSummary": "{{start}} - {{finish}} of {{total}} transactions"
  },
  "testing": {
    "testingGround": "Testing Ground",
    "transactionCreation": "Transaction Creation",
    "smartContractUpload": "Smart Contract Upload",
    "transactionCreationHint": "Enter data below to generate a unique hash",
    "smartContractHint": "Upload file below to generate a unique hash",
    "action": "Action",
    "submit": "Submit",
    "submitContract": "Submit Contract",
    "from": "From",
    "to": "To",
    "value": "Value",
    "data": "Data",
    "transaction": "Transaction",
    "call": "Call",
    "copy": "Copy",
    "file": "File",
    "contractAddress": "Contract Address:",
    "transactionHash": "Transaction Hash:",
    "result": "Result:"
  },
  "smartContracts": {
    "smartContracts": "Smart Contracts",
    "smartContractUpload": "Upload Smart Contracts",
    "name": "Name",
    "contractOwnerAddress": "Contract Owner Address",
    "createContract": "Deploy Contract",
    "updateContract": "Update Contract",
    "createContractError": "There was an error uploading your contract. Please correct any errors and try again:",
    "viewDetail": "View Details",
    "name": "Name",
    "namePlaceholder": "MyContract",
    "owner": "Owner",
    "file": "File",
    "preview": "Preview",
    "connectWithTruffle": "Connect With Truffle",
    "externalSourceWarning": "This contract version was deployed from an external source and therefore has no associated sourcecode or metadata.",
    "externalSourceUpload": "Upload",
    "paginationSummary": "{{start}} - {{finish}} of {{total}} contracts",
    "version": {
      "title": "Version",
      "version": "Version",
      "placeholder": "1.0",
      "address": "Address",
      "functions": "Functions",
      "gas": "Gas",
      "value": "Value",
      "from": "From",
      "call": "Call",
      "send": "Send",
      "emptyResponse": "Empty Response",
      "returnValues": "Return Values",
      "decoded": "Decoded:",
      "raw": "Raw:",
      "transaction": "Transaction",
      "preview": "Preview",
      "selectVersion": "Select Version",
      "addressHelper": "This is your address",
      "functionParameters": "Function Parameters",
      "parameterHelper": "Parameter Required By Function",
      "arrayParameterHelper": "To add multiple array values, enter each one on a new line",
      "download": "Download",
      "inputTypeHelper": "Expected value should be: {{type}}",
      "addressLengthValidationMessage": "Must be 42 characters long",
      "addressPatternValidationMessage": "Must be a valid hexadecimal address",
      "inputUIntValidationMessage": "Must be a valid unsigned integer value",
      "inputSignedIntValidationMessage": "Must be a valid signed integer value",
      "inputByteLengthValidationMessage": "Invalid byte length for input",
      "inputByteArrayByteLengthValidationMessage": "One or more values in this array have an incorrect byte length",
      "inputArrayLengthValidationMessage": "The array has an invalid length",
      "tabs": {
        "execute": "Execute",
        "source": "Source",
        "metadata": "Metadata",
        "bytecode": "Bytecode"
      },
      "tooltips": {
        "contractAddress": "Contract Address",
        "availableActions": "Available Contract Actions",
        "requiredParameters": "Required Function Parameters",
        "callHelper": "Call is used for a local invocation, which is a good first step for testing, before clicking send and invoking on the blockchain."
      }
    },
    "form": {
      "addressHelper": "Your address",
      "versionHelper": "Please update the version before updating",
      "versionDuplicateValidationMessage": "You must choose a new value for version",
      "versionLengthValidationMessage": "Version must be 16 or fewer characters",
      "callSuccessMessage": "Contract was locally invoked successfully, click send to execute the contract on the blockchain",
      "generalInformationTitle": "General Information",
      "contractSelectionTitle": "Contract Selection",
      "contractSelectionHelper": "Select the contract you'd like to deploy from this file",
      "constructorParametersTitle": "Constructor Parameters",
      "constructorParametersRequiredHelper": "Please provide the parameters for the contract constructor below.",
      "constructorParametersNotRequiredHelper": "There are no constructor parameters needed to deploy this contract."
    },
    "tour": {
      "deployed": {
        "title": "Contract Address",
        "content": "Your contract has been deployed to the blockchain, it is accessible via this contract address."
      },
      "availableActions": {
        "title": "Available Functions",
        "content": "Choose an available smart contract function to execute.  Some methods retrieve previous transaction information, others perform transactions, please refer to the source code to understand each function."
      },
      "call": {
        "title": "Call",
        "content": "This is a read only operation, that does not broadcast or publish on to the blockchain.  This is useful for retrieving previously executed information saved in a contract or for testing a transaction before executing."
      },
      "send": {
        "title": "Send",
        "content": "This will perform a transaction on the blockchain."
      },
      "tabs": {
        "title": "Contract Info",
        "content": "Contract information, such as source code bytecode and meta data can be found in these tabs"
      }
    },
    "truffle": {
      "title": "How to connect with truffle",
      "first": "Install and setup truffle.",
      "second": "In your truffle project do an npm init, if you haven't done so already, and install web3@0.19.0",
      "third": "Edit your truffle.js file so that it is similar to below, make sure to change your password, your email is your username.",
      "option": "You may need to modify the web3 basic auth like below, depending on your version of web3.",
      "fourth": "Now you should be able to deploy using truffle."
    }
  },
  "organization": {
    "title": "Organization Management",
    "actions": {
      "title": "Actions",
      "options": {
        "add": {
          "title": "Add Org"
        },
        "import": {
          "title": "Import Org"
        },
        "delete": {
          "title": "Delete Org"
        }
      }
    },
    "grid": {
      "pagination": {
        "title": "Orgs"
      },
      "columns": {
        "name": {
          "title": "Name"
        },
        "domain": {
          "title": "Domain"
        },
        "type": {
          "title": "Type"
        },
        "created": {
          "title": "Created On"
        }
      }
    },
    "addOrgForm": {
      "title": "Add Organization",
      "inputs": {
        "name": {
          "title": "Name",
          "placeholder": "MyOrganization"
        },
        "peerNumber": {
          "title": "Peer Number",
          "placeholder": "1234"
        },
        "domain": {
          "title": "Domain",
          "placeholder": "MyDomain"
        },
        "type": {
          "title": "Type",
          "placeholder": "peer1"
        }
      },
      "submit": {
        "title": "Add"
      }
    },
    "importOrgForm": {
      "title": "Import Organization",
      "inputs": {
        "name": {
          "title": "Name",
          "placeholder": "Org1"
        },
        "certificate": {
          "title": "Upload Certificate"
        },
        "privateKey": {
          "title": "Upload Private Key"
        }
      },
      "submit": {
        "title": "Import"
      }
    },
    "deleteOrgForm": {
      "title": "Delete Org(s)",
      "submit": {
        "title": "Yes"
      }
    }
  },
  "consortium": {
    "title": "Consortium Management",
    "actions": {
      "title": "Actions",
      "options": {
        "add": {
          "title": "Add Instance"
        },
        "delete": {
          "title": "Delete Instance"
        }
      }
    },
    "grid": {
      "pagination": {
        "title": "Consortium"
      },
      "columns": {
        "name": {
          "title": "Name"
        },
        "members": {
          "title": "Members"
        },
        "created": {
          "title": "Created On"
        }
      }
    },
    "addConsortiumForm": {
      "title": "Add Consortium",
      "inputs": {
        "name": {
          "title": "Name",
          "placeholder": "MyConsortium"
        },
        "members": {
          "title": "Members"
        }
      },
      "submit": {
        "title": "Add"
      }
    },
    "deleteConsortiumForm": {
      "title": "Delete Instance(s)",
      "submit": {
        "title": "Yes"
      }
    }
  },
  "blockchains": {
    "title": "Blockchain Management",
    "actions": {
      "title": "Actions",
      "options": {
        "add": {
          "title": "Create Blockchain"
        },
        "delete": {
          "title": "Delete Blockchain"
        }
      }
    },
    "grid": {
      "pagination": {
        "title": "Blockchains"
      },
      "columns": {
        "name": {
          "title": "Name"
        },
        "membersCount": {
          "title": "Members"
        },
        "channelsCount": {
          "title": "Channels Count"
        },
        "consensusType": {
          "title": "Consensus Type"
        },
        "fabricExplorerUrl": {
          "title": "Fabric Dashboard"
        },
        "k8sDashboardUrl": {
          "title": "Kubernetes Dashboard"
        },
        "status": {
          "title": "Status"
        },
        "action": {
          "title": "Last Action"
        },
        "created": {
          "title": "Created On"
        }
      }
    },
    "detail": {
      "status": "Status",
      "consensusType": "Consensus Type",
      "openKube": "Open Kubernetes Dashboard",
      "openFabric": "Open Fabric Dashboard",
      "orgTab": "Organizations",
      "channelTab": "Channels"
    },
    "addBlockchainForm": {
      "title": "Create Blockchain",
      "inputs": {
        "name": {
          "title": "Name",
          "placeholder": "Blockchain"
        },
        "peerOrg": {
          "title": "Peer Organization"
        },
        "consensusType": {
          "title": "Consensus Type",
          "placeholder": "1234"
        },
        "ordererOrg": {
          "title": "Orderer Org"
        },
        "kubernetes": {
          "title": "Kubernetes Instance",
          "placeholder": "1234"
        },
        "createCli": {
          "title": "Create Cli"
        }
      },
      "submit": {
        "title": "Create"
      }
    },
    "deleteBlockchainForm": {
      "title": "Delete Blockchain(s)",
      "submit": {
        "title": "Yes"
      }
    }
  },
  "logging": {
    "heatMap": {
      "dailyTitle": "Calls by time of day",
      "hourlyTitle": "Calls by the hour",
      "days": {
        "0": "Sun",
        "1": "Mon",
        "2": "Tue",
        "3": "Wed",
        "4": "Thu",
        "5": "Fri",
        "6": "Sat"
      },
      "axisLabels": {
        "minute": "Minute",
        "hour": "Hour",
        "day": "Day"
      },
      "notEnoughData": "Not enough data available"
    },
    "timePeriods": {
      "oneMinute": "1 Minute",
      "fiveMinutes": "5 Minutes",
      "fifteenMinutes": "15 Minutes",
      "oneHour": "1 Hour",
      "sixHours": "6 Hours",
      "twelveHours": "12 Hours",
      "oneDay": "1 Day",
      "sevenDays": "7 Days",
      "thirtyDays": "30 Days"
    },
    "logTable": {
      "title": "Logs",
      "noLogsFound": "No logs found for the selected time period."
    },
    "actions": {
      "loadMore": "Load More"
    },
    "bar": {
      "title": "Ethereum RPC Method Calls",
      "xCalls": "{{num}} Calls",
      "toDate": "To: {{toDate}}",
      "fromDate": "From: {{fromDate}}"
    },
    "counts": {
      "loadingTotalCount": "Getting total count...",
      "totalCount": "{{total}} Total"
    },
    "exports": {
      "title": "Export",
      "exportChartData": {
        "title": "Export Chart Data",
        "countsToExport": "{{count}} counts to export"
      },
      "exportLogEvents": {
        "title": "Export Log Events",
        "logsToExport": "{{count}} logs to export",
        "tooManyLogs": "Too many logs in the selected time frame to export. Please select a smaller time frame.",
        "exportingXLogs": "Exporting {{count}} logs",
        "closeWarning": "Closing this dialog or navigating away from this screen will cancel the export."
      },
      "actions": {
        "export": "Export",
        "close": "Close"
      }
    }
  },
  "personas": {
    "systemsAdmin": "Systems Admin",
    "consortiumAdmin": "Consortium Admin",
    "orgAdmin": "Org Admin",
    "orgDeveloper": "Org Developer",
    "orgUser": "Org User"
  },
  "deleteModal": {
    "bodyText": "Are you sure you want to delete"
  },
  "globalError": {
    "routingError": "You do not have permission to visit this section of VMware Blockchain, please contact your sysadmin for more info."
  },
  "users": {
    "title": "User Management",
    "actions": {
      "title": "Actions",
      "options": {
        "add": {
          "title": "Add User"
        },
        "edit": {
          "title": "Edit User"
        },
        "delete": {
          "title": "Delete User"
        }
      }
    },
    "grid": {
      "pagination": {
        "title": "Users"
      },
      "columns": {
        "name": {
          "title": "Name"
        },
        "email": {
          "title": "Email"
        },
        "organization": {
          "title": "Organization"
        },
        "persona": {
          "title": "Role"
        }
      }
    },
    "editUserForm": {
      "title": "Edit User",
      "inputs": {
        "firstName": {
          "title": "First Name",
          "placeholder": "First Name"
        },
        "lastName": {
          "title": "Last Name",
          "placeholder": "Last Name"
        },
        "email": {
          "title": "Email",
          "placeholder": "emailid@doamin.com"
        },
        "role": {
          "title": "Role",
          "placeholder": "persona"
        }
      },
      "submit": {
        "title": "Submit"
      }
    },
    "addUserForm": {
      "title": "Add User",
      "inputs": {
        "firstName": {
          "title": "First Name",
          "placeholder": "First Name"
        },
        "lastName": {
          "title": "Last Name",
          "placeholder": "Last Name"
        },
        "email": {
          "title": "Email",
          "placeholder": "emailid@doamin.com"
        },
        "password": {
          "title": "Password",
          "placeholder": "********"
        },
        "confirmPassword": {
          "title": "Confirm Password",
          "placeholder": "********"
        },
        "organization": {
          "title": "Organization",
          "placeholder": "Organization"
        },
        "role": {
          "title": "Role",
          "placeholder": "persona"
        }
      },
      "errors": {
        "password": {
          "minLength": "Password must be at least 8 characters long.",
          "mismatch": "Passwords do not match."
        }
      },
      "submit": {
        "title": "Submit"
      }
    },
    "deleteUserForm": {
      "title": "Delete User(s)",
      "submit": {
        "title": "Yes"
      }
    },
    "settings": {
      "title": "User Settings",
      "orgTitle": "My Organizations and Certificates",
      "firstName": "First Name",
      "lastName": "Last Name",
      "name": "Name",
      "email": "Email",
      "role": "Role",
      "consortiums": "Consortiums",
      "organization": {
        "title": "Organization"
      },
      "wallet": {
        "myWallet": "My Wallet",
        "address": "Address",
        "showPrivateKey": "Show Private Key",
        "download": "Download",
        "createWallet": "Create Wallet"
      },
      "walletForm": {
        "showPrivateKey": "Show Private Key",
        "createWallet": "Create Wallet",
        "enterPassword": "Enter Password",
        "passwordWarning": "Please use a key management solution like 1Password or LastPass to store the passwords, because passwords are not changeable or recoverable.",
        "password": "Password",
        "requiredText": "This is a required field",
        "walletDetails": "Wallet Details",
        "privateKeyWarning": "Never disclose private key.  Anyone with access to your private key can make transactions on your behalf",
        "address": "Address",
        "privateKey": "Private Key",
        "concealedPrivateKey": "************"
      },
      "credentials": "Credentials",
      "downloadCertificate": {
        "title": "Download Certificate",
        "enterPassword": {
          "navTitle": "Enter Password",
          "pageTitle": "Password",
          "enterUserPassword": "Enter User Password",
          "placeholder": "********"
        },
        "enterToken": {
          "navTitle": "Enter Token",
          "pageTitle": "Two Factor Authentication",
          "message": "Action is required. Copy the token from VMware Verify to sign it.",
          "enterToken": "Enter Token",
          "placeholder": "Enter token"
        },
        "credentials": {
          "navTitle": "Credentials",
          "pageTitle": "Download Certificate",
          "message": "Your authentication was successful. Your download should start immediately. If download doesn't start within 1 min, click the download button directly."
        },
        "actions": {
          "download": "Download",
          "close": "Close",
          "next": "Next",
          "previous": "Previous"
        }
      },
      "editSettings": {
        "title": "Edit Settings",
        "alertMessage": "Redirect to CSP for editing the settings."
      },
      "errors": {
        "fetchUserError": "Failed to get user, please try again. If error persists contact blockchain-support@vmware.com.",
        "fetchWalletError": "Failed to get wallet, please try again. If error persists contact blockchain-support@vmware.com."
      }
    }
  },
  "blockchainWizard": {
    "title": "Deploy",
    "blockchainAndConsortium": {
      "pageTitle": "Setup Blockchain and Consortium",
      "navTitle": "Blockchain & Consortium",
      "info": "Selecting local fault tolerance will deploy nodes near your location, whereas global will distribute many nodes across all available regions.  Your consortium will be associated with this blockchain.",
      "blockchainType": "Blockchain Type",
      "concord": "Concord",
      "hyperledger": "Hyperledger",
      "faultTolerance": "Fault Tolerance",
      "global": "Global",
      "local": "Local",
      "consortiumName": "Consortium Name",
      "consortiumPlaceholder": "My Consortium"
    },
    "addOrgs": {
      "pageTitle": "Add Organizations",
      "navTitle": "Add Organizations",
      "info": "Please add organizations that will be a part of this consortium. Each organization will be given credentials for performing transactions on the blockchain.  We request an organizations location to ensure that we setup a node near each organization for minimized latency.",
      "addOrganization": "Add Organization",
      "name": "Name",
      "namePlaceholder": "My Organization",
      "location": "Location",
      "noOrgs": "No Organizations Added"
    },
    "usersAndAccess": {
      "pageTitle": "Users & Access",
      "navTitle": "Add Users & Access",
      "info": "Please add at least one org admin for each org, so they can manage their own orgs and add users as they deem necessary.",
      "firstName": "First Name",
      "firstNamePlaceholder": "John",
      "lastName": "Last Name",
      "lastNamePlaceholder": "Doe",
      "email": "Email",
      "emailPlaceholder": "jdoe@email.com",
      "organization": "Organization",
      "role": "Role",
      "addUser": "Add User",
      "noUsers": "No Users Added"
    },
    "reviewDeployment": {
      "pageTitle": "Review Deployment Setup",
      "navTitle": "Review",
      "chosenBlockchain": "Chosen Blockchain",
      "consortiumSetup": "Consortium Setup",
      "advanced": "Advanced",
      "networkName": "Network Name",
      "numberOfNodes": "Number of Nodes",
      "publicNodesRegions": "Public Nodes Regions",
      "privateNode": "Private Node (vCenter/ESX)",
      "organizations": "Organizations",
      "privateNodeValues": {
        "londonDatacenter": "london-datacenter",
        "usDatacenter": "us-datacenter"
      },
      "publicNodeValues": {
        "usEast1": "AWS US East (N. Virginia)",
        "usEast2": "AWS US East (Ohio)",
        "usWest1": "AWS US West (N. California)",
        "usWest2": "AWS US West (Oregon)",
        "apNortheast1": "AWS Asia Pacific (Tokyo)",
        "apNortheast3": "AWS Asia Pacific (Osaka-Local)",
        "apSouth1": "AWS Asia Pacific (Mumbai)",
        "apSoutheast1": "AWS Asia Pacific (Singapore)",
        "apSoutheast2": "AWS Asia Pacific (Sydney)",
        "caCentral1": "AWS Canada (Central)",
        "cnNorth1": "AWS China (Beijing)",
        "cnNorthWest1": "AWS China (Ningxia)",
        "euWest1": "AWS EU (Ireland)",
        "euWest2": "AWS EU (London)",
        "euWest3": "AWS EU (Paris)",
        "euCentral1": "AWS EU (Frankfurt)",
        "saEast1": "AWS South America (São Paulo)"
      }
    },
    "locations": {
      "sydney": "Australia, Sydney",
      "vienna": "Austria, Vienna",
      "brussels": "Belgium, Brussels",
      "rioDeJaneiro": "Brazil, Rio de Janeiro",
      "toronto": "Canada, Toronto",
      "santiago": "Chile, Santiago",
      "beijing": "China, Beijing",
      "cairo": "Egypt, Cairo",
      "paris": "France, Paris",
      "delhi": "India, Delhi",
      "milan": "Italy, Milan",
      "tokyo": "Japan, Tokyo",
      "mexicoCity": "Mexico, Mexico City",
      "moscow": "Russia, Moscow",
      "seoul": "South Korea, Seoul",
      "johannesburg": "South Africa, Johannesburg ",
      "london": "United Kingdom, London",
      "lasVegas": "United States, Las Vegas",
      "newYork": "United States, New York",
      "paloAlto": "United States, Palo Alto"
    }
  },
  "mockTasks": {
    "creatingOrg": "Creating Organizations",
    "addingUsers": "Adding Users",
    "creatingConsortium": "Creating Consortium",
    "vmInstance": "VM Instance",
    "blockchainInstance": "Blockchain Instance"
  },
  "tourSteps": {
    "title": "Take Tour",
    "nextBtnText": "Next",
    "prevBtnText": "Prev",
    "endBtnText": "End",
    "dashboard": {
      "dashStats": {
        "title": "General Status",
        "text": "Here you can see the general status of nodes, contracts, blocks and transactions.  Dashboard stats and lists refresh automatically, so no need to reload the page."
      },
      "nodeStatus": {
        "title": "Node Status",
        "text": "Hover over a node on the map to see its health and status."
      },
      "contractList": {
        "title": "Contract List",
        "text": "Here are recent contracts that have been added. As well as other lists with recent updates."
      }
    },
    "smartContracts": {
      "manageSmartContracts": {
        "title": "Manage Smart contracts",
        "text":  "This is where you can manage and view your smart contracts as well as other smart contracts submitted by members of your consortium."
      },
      "createSmartContract": {
        "title": "Deploy",
        "text": "Click here to deploy a contract"
      }
    },
    "users": {
      "userManagement": {
        "title": "Manage users",
        "text": "Click here to manage users in your organization or consortium."
      },
      "userActions": {
        "title": "User Actions",
        "text": "Add and manage users here."
      },
      "userSettings": {
        "title": "User settings",
        "text": "Click here to go to your user settings and download organization certificates."
      },
      "downloadCertificate": {
        "title": "Download certificate",
        "text": "Click here to download your certificate to connect this blockchain with third-party apps."
      }
    }
  },
  "graph": {
    "days": {
      "0": "Sunday",
      "1": "Monday",
      "2": "Tuesday",
      "3": "Wednesday",
      "4": "Thursday",
      "5": "Friday",
      "6": "Saturday"
    }
  },
  "logDetails": {
    "col": {
      "ingestTimestamp": "ingest_timestamp",
      "logTimestamp": "log_timestamp",
      "appName": "appname",
      "organizationId": "organization_id",
      "source": "source",
      "id": "id",
      "process": "process"
    }
  }
}
