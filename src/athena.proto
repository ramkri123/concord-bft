// Copyright 2018 VMware, all rights reserved
//
// External interface definition.

package com.vmware.athena;

message AthenaRequest {
    optional ProtocolRequest protocolRequest = 1;
    optional PeerRequest peerRequest = 2;
    repeated EthRequest ethRequest = 3;

    // 4-2045 open for definition
    // Likely: metrics/stats, non-eth blockchain, other admin

    optional TestRequest testRequest = 2046;

    message ProtocolRequest {
        optional int32 clientVersion = 1;
        // TODO: probably some auth in here too
    }

    message PeerRequest {
        optional bool returnPeers = 1;
        repeated Peer addPeers = 2;
        repeated Peer removePeers = 3;
    }

    message EthRequest {
        enum EthMethod {
            SEND_TX = 1;
            SEND_TX_RAW = 2;
        }
        
        optional EthMethod method = 1;
        optional int64 id = 2;
        optional bytes addrTo = 3;
        optional bytes addrFrom = 4;
        optional bytes value = 5;
        optional bytes data = 6;
        optional bool create = 7;
    }

    message TestRequest {
        optional string echo = 1;
    }
}

message AthenaResponse {
    optional ProtocolResponse protocolResponse = 1;
    optional PeerResponse peerResponse = 2;
    repeated EthResponse ethResponse = 3;

    // 4-2045 open for definition

    optional TestResponse testResponse = 2046;
    optional ErrorResponse errorResponse = 2047;

    message ProtocolResponse {
        optional int32 serverVersion = 1;
    }

    message PeerResponse {
        repeated Peer peers = 1;
    }

    message EthResponse {
        optional int64 id = 1;
    }

    message TestResponse {
        optional string echo = 1;
    }

    message ErrorResponse {
        optional string description = 1;
    }
}

message Peer {
    optional string address = 1;
    optional int32 port = 2;

    // putting this one late so it doesn't consume a useful address
    // while we're figuring out what format it should actually have
    optional string status = 2047;
}