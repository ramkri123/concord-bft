// Copyright 2018 VMware, all rights reserved
//
// External interface definition.
package com.vmware.athena;

message AthenaRequest {
	optional ProtocolRequest protocol_request = 1;
	optional PeerRequest peer_request = 2;
	repeated EthRequest eth_request = 3;

	// 4-2045 open for definition
	// Likely: metrics/stats, non-eth blockchain, other admin
	optional TestRequest test_request = 2046;
}

message ProtocolRequest {
	optional int32 client_version = 1;
	// TODO: probably some auth in here too
}

message PeerRequest {
	optional bool return_peers = 1;
	repeated Peer add_peer = 2;
	repeated Peer remove_peer = 3;
}

message EthRequest {
	enum EthMethod {
		SEND_TX = 1;
		SEND_TX_RAW = 2;
	}

	optional EthMethod method = 1;
	optional int64 id = 2;
	optional bytes addr_to = 3;
	optional bytes addr_from = 4;
	optional bytes value = 5;
	optional bytes data = 6;
	optional bool create = 7;
}

message TestRequest {
	optional string echo = 1;
}

message AthenaResponse {
	optional ProtocolResponse protocol_response = 1;
	optional PeerResponse peer_response = 2;
	repeated EthResponse eth_response = 3;

	// 4-2045 open for definition
	optional TestResponse test_response = 2046;
	repeated ErrorResponse error_response = 2047;
}

message ProtocolResponse {
	optional int32 server_version = 1;
}

message PeerResponse {
	repeated Peer peer = 1;
}

message EthResponse {
	optional int64 id = 1;
}

message TestResponse {
	optional string echo = 1;
}

message ErrorResponse {
	optional string description = 1;
}

message Peer {
	optional string address = 1;
	optional int32 port = 2;

	// putting this one late so it doesn't consume a useful address
	// while we're figuring out what format it should actually have
	optional string status = 2047;
}