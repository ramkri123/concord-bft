package Contracts;

import org.json.simple.JSONObject;

public class Contract {
    
    private String sourceCode;
    private String byteCode;
    // metadata generated by solidity compiler is a json object
    private JSONObject metadata;
    private String name;
    // Address must always start with `0x`
    private String address;
    
    
    public Contract(String name, String byteCode, String sourceCode,
                    JSONObject metadata,
                    String address) {
        this.name = name;
        this.byteCode = byteCode;
        this.sourceCode = sourceCode;
        this.metadata = metadata;
        this.address = address;
    }
    
    public String getSourceCode() {
        return sourceCode;
    }
    
    public String getByteCode() {
        return byteCode;
    }
    
    public JSONObject getMetadata() {
        return metadata;
    }
    
    public String getName() {
        return name;
    }
    
    public String getAddress() {
        return address;
    }
    
    public static boolean isValidContractAddress(String hash) {
        // has to be 20 byte hex string = 40 char string
        // we allows it to either start with 0x or not
        if (hash.startsWith("0x"))
            hash = hash.substring(2);
        return hash.length() == 40 && hash.matches("[0-9a-zA-Z]+");
    }
    
    
    public JSONObject toJSON() {
        JSONObject json = new JSONObject();
        json.put("name", name);
        json.put("address", address);
        json.put("metadata", metadata);
        json.put("byteCode", byteCode);
        // Don't include source code since it might contains multiple contracts
        return json;
    }
}
